import java.text.DateFormat
import java.text.SimpleDateFormat

apply plugin: 'com.android.application'
apply plugin: 'com.google.protobuf'

def getCurrentTime() {
    DateFormat df = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss")
    return df.format(Calendar.getInstance(Locale.CHINA).getTime())
}

def currentTime = getCurrentTime();

//Properties props = new Properties()
//props.load(new FileInputStream(file("signing.properties")))
android {
    compileSdkVersion 31
    buildToolsVersion "30.0.2"
    defaultConfig {
        applicationId "man.who.scan.my.app.die.a.mother"
        minSdkVersion 24
        targetSdkVersion 31
        versionCode 17
        versionName "1.4.0r"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
//    signingConfigs {
//        release {
//            keyAlias props['KEY_ALIAS']
//            keyPassword props['KEY_PASSWORD']
//            storeFile file(props['KEYSTORE_FILE'])
//            storePassword props['KEYSTORE_PASSWORD']
//        }
//    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
//            signingConfig signingConfigs.release
            buildConfigField("String", "apkBuildTime", "\"${currentTime}\"")
        }
        debug {
//            signingConfig signingConfigs.release
            buildConfigField("String", "apkBuildTime", "\"${currentTime}\"")
        }
    }

    lintOptions {
        quiet true
        abortOnError false
        ignoreWarnings true
        checkAllWarnings false
        warningsAsErrors false
        // 关闭指定问题检查
        disable 'TypographyFractions', 'TypographyQuotes', 'InvalidPackage', 'ValidFragment'
        // 仅检查指定问题
        check 'NewApi', 'InlinedApi'
        // true--error输出文件不包含源码行号
        noLines true
        // true--显示错误的所有发生位置，不截取
        showAll true
        // 回退lint设置(默认规则)
        lintConfig file("default-lint.xml")
        // true--生成txt格式报告(默认false)
        textReport false
        textOutput 'stdout'
        checkReleaseBuilds false
    }
}

protobuf {
    // generatedFilesBaseDir = "$projectDir/src/main/proto"
    protoc { artifact = 'com.google.protobuf:protoc:3.21.7' }
    plugins {
        grpc {
            artifact = 'io.grpc:protoc-gen-grpc-java:1.51.0' // CURRENT_GRPC_VERSION
        }
    }
    generateProtoTasks {
        // 为了修改Grpc ServiceName, 对自动生成的代码有所修改
        // 这里直接把所有任务置为false, 不再生成
        all().matching { task ->false }.each { task ->
            task.builtins {
                java { option 'lite' }
            }
            task.plugins {
                grpc { // Options added to --grpc_out
                    option 'lite'
                }
            }
        }
        //
    }

}

dependencies {
//    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'io.netty:netty-all:4.1.63.Final'
    //    implementation 'com.android.support:design:27.1.0'
    implementation 'com.google.android.material:material:1.2.1'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.1'
    implementation 'org.jetbrains:annotations-java5:15.0'
    //    implementation("com.squareup.okhttp3:okhttp:4.9.0")
    implementation project(':ByWebView')

    implementation 'io.grpc:grpc-okhttp:1.51.0'
    implementation 'io.grpc:grpc-protobuf-lite:1.51.0'
    implementation 'io.grpc:grpc-stub:1.51.0'
    compileOnly 'org.apache.tomcat:annotations-api:6.0.53' // necessary for Java 9+
}
